package de.telran.geork.homeworks.hw9;

public class Theory {
    /*
1.	Как оптимизирован ArrayList?
•	/
2.	Что такое Set?
•	Коллекция, без дубликатов, без доступа к индексу, не важен порядок вставки
3.	Что дополнительно привносит SortedSet? что привносит NavigatableSet
•	SortedSet : методы для отображения коллекции с различными условиями
•	NavigableSet: методы для отображения определенного элемента или удаления первого или последнего элемнта
4.	В какую реализацию Set можно добавить null?
•	HashSet
5.	Для чего лучше использовать TreeSet, для чего HashSet?
•	HashSet: для коллекции без дубликатов  и без сортировки
•	TreeSet: для коллекции без дубликатов  но с сортировкой
6.	В чем разница HashSet и LinkedHashSet?
•	HashSet: можно добавить null
•	LinkedHashSet: если порядок вставки элементов должен быть сохранен
7.	Что необходимо реализовать, чтобы использовать HashSet?
•	Метод @Override hashCode
8.	Какие объекты мы можем добавлять в TreeSet?
•	Элементы, вставленные в TreeSet, должны либо реализовывать интерфейс Comparable , либо , по крайней мере, быть приняты указанным компаратором. Все такие элементы должны быть взаимно сравнимы, не должны вызывать исключение ClassCastException .

     */
}
